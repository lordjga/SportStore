version: '3.4'

services:
  portainer:
    container_name: portainer
    ports:
      - "8080:8000"
      - "9090:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data

  catalogdb:
    container_name: catalogdb
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    command: ["mongod", "--port", "27017"]
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
  
  mongo-express:
    container_name: mongo-express
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_SERVER: catalogdb
      ME_CONFIG_MONGODB_PORT: 27017
      ME_CONFIG_MONGODB_URL: mongodb://root:example@catalogdb:27017/
    depends_on:
      - catalogdb

  basketdb:
    container_name: basketdb
    volumes:
      - redis_data:/var/lib/redis
      - redis-config:/usr/local/etc/redis/redis.conf
    ports:
      - "6379:6379"
    # networks:
    #   - redis-network

  redis-commander:
    image: rediscommander/redis-commander:latest
    environment:
      - REDIS_HOSTS=local:basketdb:6379
      # - HTTP_USER=root
      # - HTTP_PASSWORD=qwerty
    ports:
      - 8082:8081
    # networks:
    #   - redis-network
    depends_on:
      - basketdb

  catalog.api:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "ConnectionStrings__DefaultConnection=mongodb://root:example@catalogdb:27017"
      - "IsInDocker=true" 
      - ASPNETCORE_HTTP_PORTS=80
    ports:
      - "9000:80"
    depends_on:
      - catalogdb

  basket.api:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "ConnectionStrings__CacheConnection=basketdb:6379"
      - ASPNETCORE_HTTP_PORTS=80
    ports:
      - "9001:80"
    depends_on:
      - basketdb
